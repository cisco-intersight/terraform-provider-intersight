// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NiaapiReleaseRecommend Niaapi:Release Recommend
//
// This contains the recommend version based on the hardware.
//
// swagger:model niaapiReleaseRecommend
type NiaapiReleaseRecommend struct {
	MoBaseMo

	// Current long-lived release.
	Cll string `json:"Cll,omitempty"`

	// Customer recommended releases.
	Crr string `json:"Crr,omitempty"`

	// Hardware model identificator.
	Pid string `json:"Pid,omitempty"`

	// Upcoming long-lived release.
	Ull string `json:"Ull,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *NiaapiReleaseRecommend) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 MoBaseMo
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.MoBaseMo = aO0

	// AO1
	var dataAO1 struct {
		Cll string `json:"Cll,omitempty"`

		Crr string `json:"Crr,omitempty"`

		Pid string `json:"Pid,omitempty"`

		Ull string `json:"Ull,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.Cll = dataAO1.Cll

	m.Crr = dataAO1.Crr

	m.Pid = dataAO1.Pid

	m.Ull = dataAO1.Ull

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m NiaapiReleaseRecommend) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.MoBaseMo)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)
	var dataAO1 struct {
		Cll string `json:"Cll,omitempty"`

		Crr string `json:"Crr,omitempty"`

		Pid string `json:"Pid,omitempty"`

		Ull string `json:"Ull,omitempty"`
	}

	dataAO1.Cll = m.Cll

	dataAO1.Crr = m.Crr

	dataAO1.Pid = m.Pid

	dataAO1.Ull = m.Ull

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this niaapi release recommend
func (m *NiaapiReleaseRecommend) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with MoBaseMo
	if err := m.MoBaseMo.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *NiaapiReleaseRecommend) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NiaapiReleaseRecommend) UnmarshalBinary(b []byte) error {
	var res NiaapiReleaseRecommend
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
