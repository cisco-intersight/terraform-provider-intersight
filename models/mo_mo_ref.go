// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MoMoRef Mo:Mo Ref
//
// A reference to a REST resource, uniquely identified by object type and Moid.
//
// swagger:model moMoRef
type MoMoRef struct {

	// The Moid of the referenced REST resource.
	// Read Only: true
	Moid string `json:"Moid,omitempty"`

	// The Object Type of the referenced REST resource.
	// Read Only: true
	ObjectType string `json:"ObjectType,omitempty"`

	// An OData $filter expression which describes the REST resource to be referenced. This field may
	// be set instead of 'moid' by clients. If 'moid' is set this field is ignored. If 'selector'
	// is set and 'moid' is empty/absent from the request, Intersight will determine the Moid of the
	// resource matching the filter expression and populate it in the MoRef that is part of the object
	// instance being inserted/updated to fulfill the REST request. An error is returned if the filter
	// matches zero or more than one REST resource.
	// An example filter string is: Serial eq '3AA8B7T11'.
	// Read Only: true
	Selector string `json:"Selector,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *MoMoRef) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		Moid string `json:"Moid,omitempty"`

		ObjectType string `json:"ObjectType,omitempty"`

		Selector string `json:"Selector,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.Moid = dataAO0.Moid

	m.ObjectType = dataAO0.ObjectType

	m.Selector = dataAO0.Selector

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m MoMoRef) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		Moid string `json:"Moid,omitempty"`

		ObjectType string `json:"ObjectType,omitempty"`

		Selector string `json:"Selector,omitempty"`
	}

	dataAO0.Moid = m.Moid

	dataAO0.ObjectType = m.ObjectType

	dataAO0.Selector = m.Selector

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this mo mo ref
func (m *MoMoRef) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *MoMoRef) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MoMoRef) UnmarshalBinary(b []byte) error {
	var res MoMoRef
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
